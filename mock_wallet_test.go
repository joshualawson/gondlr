// Code generated by mockery v2.10.0. DO NOT EDIT.

package gondlr

import (
	wallet "github.com/joshualawson/gondlr/wallet"
	mock "github.com/stretchr/testify/mock"
)

// MockWallet is an autogenerated mock type for the Wallet type
type MockWallet struct {
	mock.Mock
}

// PrivateKey provides a mock function with given fields:
func (_m *MockWallet) PrivateKey() wallet.PrivateKey {
	ret := _m.Called()

	var r0 wallet.PrivateKey
	if rf, ok := ret.Get(0).(func() wallet.PrivateKey); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(wallet.PrivateKey)
		}
	}

	return r0
}

// PrivateKeyBytes provides a mock function with given fields:
func (_m *MockWallet) PrivateKeyBytes() []byte {
	ret := _m.Called()

	var r0 []byte
	if rf, ok := ret.Get(0).(func() []byte); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]byte)
		}
	}

	return r0
}

// PublicKey provides a mock function with given fields:
func (_m *MockWallet) PublicKey() wallet.PublicKey {
	ret := _m.Called()

	var r0 wallet.PublicKey
	if rf, ok := ret.Get(0).(func() wallet.PublicKey); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(wallet.PublicKey)
		}
	}

	return r0
}

// PublicKeyBytes provides a mock function with given fields:
func (_m *MockWallet) PublicKeyBytes() []byte {
	ret := _m.Called()

	var r0 []byte
	if rf, ok := ret.Get(0).(func() []byte); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]byte)
		}
	}

	return r0
}
